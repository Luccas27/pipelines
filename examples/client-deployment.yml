name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
jobs:
  test:
    if: github.event_name == 'pull_request'
    name: Test
    uses: Luccas27/pipelines/.github/workflows/test.yml@main
    permissions:
      actions: read
      contents: read
      security-events: write

  build-staging:
    if: github.event_name == 'pull_request'
    name: Build Staging
    uses: Luccas27/pipelines/.github/workflows/build.yml@main
    needs: test
    with:
      node_env: staging
      app_name: criticine
    secrets:
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
      GPG_PUBLIC_KEY: ${{secrets.GPG_PUBLIC_KEY}}
      GPG_PRIVATE_KEY: ${{secrets.GPG_PRIVATE_KEY}}

  deploy-staging:
    if: github.event_name == 'pull_request'
    name: Deploy Staging
    uses: Luccas27/pipelines/.github/workflows/deploy.yml@main
    needs: [test, build-staging]
    with:
      dockercompose_filename: docker-compose.staging.yml
      environment: Staging
    secrets:
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
      SSH_HOST: ${{secrets.SSH_HOST}}
      SSH_USER: ${{secrets.SSH_USER}}
      SSH_KEY: ${{secrets.SSH_KEY}}
      SSH_PORT: ${{secrets.SSH_PORT}}

  build-prod:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Build Prod
    uses: Luccas27/pipelines/.github/workflows/build.yml@main
    with:
      node_env: production
      app_name: criticine
    secrets:
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
      GPG_PUBLIC_KEY: ${{secrets.GPG_PUBLIC_KEY}}
      GPG_PRIVATE_KEY: ${{secrets.GPG_PRIVATE_KEY}}

  deploy-prod:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Prod
    uses: Luccas27/pipelines/.github/workflows/deploy.yml@main
    needs: [build-prod]
    with:
      dockercompose_filename: docker-compose.prod.yml
      environment: Production
    secrets:
      DOCKERHUB_USERNAME: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKERHUB_TOKEN: ${{secrets.DOCKERHUB_TOKEN}}
      SSH_HOST: ${{secrets.SSH_HOST}}
      SSH_USER: ${{secrets.SSH_USER}}
      SSH_KEY: ${{secrets.SSH_KEY}}
      SSH_PORT: ${{secrets.SSH_PORT}}

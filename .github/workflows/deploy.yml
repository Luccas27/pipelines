on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
        description: 'Username for Docker Hub'
      DOCKERHUB_TOKEN:
        required: true
        description: 'Token for Docker Hub authentication'
      GPG_PUBLIC_KEY:
        required: true
        description: 'Key for secrets'
      GPG_PRIVATE_KEY:
        required: true
        description: 'Key for secrets'
      SSH_HOST:
        required: true
        description: 'SSH host for deployment'
      SSH_KEY:
        required: true
        description: 'SSH private key for deployment'
      SSH_USER:
        required: true
        description: 'SSH username for deployment'
      SSH_PORT:
        required: true
        description: 'SSH port for deployment'
    inputs:
      environment:
        type: string
        default: Staging
      dockercompose_filename:
        type: string
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{inputs.environment}}

    steps:
      - name: ☁️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: 🗝️ Configure ssh connection
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_KEY }}"

      - name: 🗝️ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 🗝️ Setup GPG
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: 🗝️ Setup SOPS
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64
          mv sops-v3.8.1.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops

      - name: 🗝️ Retrieve secrets
        env:
          SOPS_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          SOPS_GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$SOPS_GPG_PRIVATE_KEY" > private_key.rsa
          gpg --import private_key.rsa
          rm private_key.rsa
          for file in .env.*.enc; do
              if [ -f "$file" ]; then
                  sops --decrypt \
                  --pgp "$SOPS_GPG_PUBLIC_KEY" \
                  "$file" > "${file%.enc}"
              fi
          done

      - name: 🚀 Deploy
        env:
          DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}
          DOTENV_KEY: ${{secrets.DOTENV_KEY}}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          docker compose -f ${{inputs.dockercompose_filename}} down -v || true \
          && docker compose -f ${{inputs.dockercompose_filename}} pull \
          && docker compose -f ${{inputs.dockercompose_filename}} up -d

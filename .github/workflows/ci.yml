on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: Staging
      target:
        type: string
        required: true
        default: dev
        description: 'Sets the target stage in dockerfile to build'
      docker_image_tag:
        type: string
        required: true
        description: 'Image name and tag to be deployed to docker'
    secrets:
      DOTENV_KEY:
        required: false
        description: 'Secret for .env file'
      DOCKERHUB_USERNAME:
        required: true
        description: 'Username for Docker Hub'
      DOCKERHUB_TOKEN:
        required: true
        description: 'Token for Docker Hub authentication'
jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{inputs.environment}}
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: ☁️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: 🔍 Lint Code Base
        run: npm run lint --if-present

      - name: 🔍 Run tests
        run: npm run test --if-present

      - name: 🔍 CodeQL - Initialize
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: 📦 CodeQL - Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 CodeQL - Perform Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript-typescript'

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🗝️ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build Application
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
        run: |
          npm run build
          npm prune --omit=dev

      - name: 📦 Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
        with:
          context: .
          target: ${{inputs.target}}
          push: true
          tags: ${{ inputs.docker_image_tag }}
          platforms: linux/amd64,linux/arm64

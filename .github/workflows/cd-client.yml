on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: 'Environment for deployment'
      docker_image_tag:
        type: string
        required: true
        description: 'Image name and tag to be deployed to docker'
      dockercompose_filename:
        type: string
        required: true
        description: 'Docker compose file name to deploy'
    secrets:
      DOTENV_KEY:
        required: false
        description: 'Secret for .env file'
      DOCKERHUB_USERNAME:
        required: true
        description: 'Username for Docker Hub'
      DOCKERHUB_TOKEN:
        required: true
        description: 'Token for Docker Hub authentication'
      SSH_HOST:
        required: true
        description: 'SSH host for deployment'
      SSH_KEY:
        required: true
        description: 'SSH private key for deployment'
      SSH_USER:
        required: true
        description: 'SSH username for deployment'
      SSH_PORT:
        required: true
        description: 'SSH port for deployment'

  workflow_dispatch:

jobs:
  cd:
    name: 🚀 Continous Deployment
    environment: ${{inputs.environment}}
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: ☁️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: 🏗️ Build Application
        env:
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
        run: |
          npm run build
          npm prune --omit=dev

      - name: 🦈 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🗝️ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📦 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ inputs.docker_image_tag }}
          platforms: linux/amd64,linux/arm64

      - name: 🗝️ Configure ssh connection
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_KEY }}"

      - name: 😎 Deploy to remote server
        env:
          DOCKER_HOST: ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PORT }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          docker compose -f ${{inputs.dockercompose_filename}} down -v || true \
          && docker compose -f ${{inputs.dockercompose_filename}} pull \
          && docker compose -f ${{inputs.dockercompose_filename}} up -d

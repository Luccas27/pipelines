on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      GPG_PUBLIC_KEY:
        required: true
      GPG_PRIVATE_KEY:
        required: true
    inputs:
      target:
        type: string
        default: 'prod'
      node_env:
        type: string
        default: staging
        required: true
      app_name:
        type: string
        required: true
jobs:
  build:
    name: 📦 Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: ☁️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🦈 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🗝️ Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🗝️ Setup GPG
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg

      - name: 🗝️ Setup SOPS
        run: |
          curl -LO https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64
          mv sops-v3.8.1.linux.amd64 /usr/local/bin/sops
          chmod +x /usr/local/bin/sops

      - name: 🗝️ Retrieve secrets
        env:
          SOPS_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          SOPS_GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$SOPS_GPG_PRIVATE_KEY" > private_key.rsa
          gpg --import private_key.rsa
          rm private_key.rsa
          for file in .env.*.enc; do
              if [ -f "$file" ]; then
                  sops --decrypt \
                  --pgp "$SOPS_GPG_PUBLIC_KEY" \
                  "$file" > "${file%.enc}"
              fi
          done

      - name: 📦 Build/Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: prod
          push: true
          tags: lucas2708/${{ inputs.app_name }}:${{inputs.node_env}}
          platforms: linux/amd64,linux/arm64
          build-args: NODE_ENV=${{inputs.node_env}}
